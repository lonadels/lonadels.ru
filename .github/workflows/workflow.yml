name: ci

on:
  push:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-and-push:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Registry
        uses: docker/login-action@v3
        with:
          registry: registry.lonadels.ru
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: registry.lonadels.ru/lonadels/lonadels.ru:latest
          push: true
          cache-from: type=registry,ref=registry.lonadels.ru/lonadels/lonadels.ru:latest
          cache-to: type=inline
          build-args: |
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            OUTLINE_API_URL=${{ secrets.OUTLINE_API_URL }}
            OUTLINE_FINGERPRINT=${{ secrets.OUTLINE_FINGERPRINT }}
            HOST_IP=${{ secrets.HOST_IP }}
            DOCKER_USERNAME=${{ vars.DOCKER_USERNAME }}
          secrets: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            API_KEY=${{ secrets.API_KEY }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
  deploy:
    environment: production
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      OUTLINE_API_URL: ${{ secrets.OUTLINE_API_URL }}
      OUTLINE_FINGERPRINT: ${{ secrets.OUTLINE_FINGERPRINT }}
      HOST_IP: ${{ secrets.HOST_IP }}
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      API_KEY: ${{ secrets.API_KEY }}
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: registry.lonadels.ru
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull and restart app
        run: |
          docker compose pull main-app
          docker compose up -d main-app --force-recreate
